// <auto-generated />
using System;
using Infrastructures;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructures2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230621153133_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.Entity.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("car_id");

                    b.HasIndex("CarModelId");

                    b.ToTable("car_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageLogoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("car_brand_id");

                    b.ToTable("car_brand_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("CarSpecsId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasPrecision(12)
                        .HasColumnType("decimal(12,0)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("WheelBase")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("car_detail_id");

                    b.HasIndex("CarId")
                        .IsUnique()
                        .HasFilter("[CarId] IS NOT NULL");

                    b.HasIndex("CarSpecsId")
                        .IsUnique()
                        .HasFilter("[CarSpecsId] IS NOT NULL");

                    b.ToTable("car_detail_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarDetailEquipment", b =>
                {
                    b.Property<int>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<int>("CarEquipmentId")
                        .HasColumnType("int");

                    b.HasKey("CarDetailId", "CarEquipmentId");

                    b.HasIndex("CarEquipmentId");

                    b.ToTable("car_detail_equipment_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("car_equipment_id");

                    b.ToTable("car_equipment_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageCar1")
                        .HasColumnType("varchar");

                    b.Property<string>("ImageCar2")
                        .HasColumnType("varchar");

                    b.Property<string>("ImageCar3")
                        .HasColumnType("varchar");

                    b.Property<string>("ImageCar4")
                        .HasColumnType("varchar");

                    b.Property<string>("ImageCar5")
                        .HasColumnType("varchar");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("car_image_id");

                    b.HasIndex("CarDetailId")
                        .IsUnique();

                    b.ToTable("car_image_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarBranchId")
                        .HasColumnType("int");

                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("car_model_id");

                    b.HasIndex("CarBranchId");

                    b.HasIndex("CarTypeId");

                    b.ToTable("car_model_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarSpecs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Acceleration")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Emissions")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("FuelConsumption")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("MaximumTorque")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Power")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Speed")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("car_specs_id");

                    b.ToTable("car_specs_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("car_type_id");

                    b.ToTable("car_type_tbl", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Entity.Car", b =>
                {
                    b.HasOne("Domain.Model.Entity.CarModel", "CarModel")
                        .WithMany("Cars")
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CarModel");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarDetail", b =>
                {
                    b.HasOne("Domain.Model.Entity.Car", "Car")
                        .WithOne("CarDetail")
                        .HasForeignKey("Domain.Model.Entity.CarDetail", "CarId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Model.Entity.CarSpecs", "CarSpecs")
                        .WithOne("CarDetail")
                        .HasForeignKey("Domain.Model.Entity.CarDetail", "CarSpecsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Car");

                    b.Navigation("CarSpecs");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarDetailEquipment", b =>
                {
                    b.HasOne("Domain.Model.Entity.CarDetail", "CarDetail")
                        .WithMany("CarDetailEquipments")
                        .HasForeignKey("CarDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Model.Entity.CarEquipment", "CarEquipment")
                        .WithMany("CarDetailEquipments")
                        .HasForeignKey("CarEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetail");

                    b.Navigation("CarEquipment");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarImage", b =>
                {
                    b.HasOne("Domain.Model.Entity.CarDetail", "CarDetail")
                        .WithOne("CarImage")
                        .HasForeignKey("Domain.Model.Entity.CarImage", "CarDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetail");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarModel", b =>
                {
                    b.HasOne("Domain.Model.Entity.CarBranch", "CarBranch")
                        .WithMany("CarModels")
                        .HasForeignKey("CarBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Model.Entity.CarType", "CarType")
                        .WithMany("CarModels")
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBranch");

                    b.Navigation("CarType");
                });

            modelBuilder.Entity("Domain.Model.Entity.Car", b =>
                {
                    b.Navigation("CarDetail");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarBranch", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarDetail", b =>
                {
                    b.Navigation("CarDetailEquipments");

                    b.Navigation("CarImage");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarEquipment", b =>
                {
                    b.Navigation("CarDetailEquipments");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarModel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarSpecs", b =>
                {
                    b.Navigation("CarDetail");
                });

            modelBuilder.Entity("Domain.Model.Entity.CarType", b =>
                {
                    b.Navigation("CarModels");
                });
#pragma warning restore 612, 618
        }
    }
}
